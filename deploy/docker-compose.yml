services:
  core:
    build: ../core
    volumes:
      - static_volume:/app/static/
      - media_volume:/app/media/
    entrypoint: ["sh", "entrypoint.sh"]
    ports:
      - "8000"
    env_file:
      - ../.env
    depends_on:
      - postgres_db
      - redis
    environment:
      - POSTGRES_HOST=postgres_db
      - REDIS_HOST=redis

  frontend:
    build: ../frontend
    volumes:
      - frontend-build_volume:/app/build
    command: npm run local-docker --prod

  postgres_db:
    image: postgres:16
    env_file:
      - ../.env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    build: .././nginx
    restart: always
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - frontend-build_volume:/usr/share/nginx/html
    depends_on:
      - core
      - frontend

  celery:
    build: ../core
    volumes:
      - static_volume:/app/static/
      - media_volume:/app/media/
    depends_on:
      - core
      - redis
    command: celery -A config worker --concurrency=4 --loglevel=info
    env_file:
      - ../.env
    environment:
      - POSTGRES_HOST=postgres_db
      - REDIS_HOST=redis
    restart: always

  redis:
     image: redis:latest
     ports:
       - "6379:6379"

volumes:
  postgres_data:
  static_volume:
  media_volume:

  frontend-build_volume:
